name: Continuous Deployment

on:
  workflow_run:
    workflows: ["Version Bump and Tag"]
    types:
      - completed
    branches:
      - main
  push:
    tags:
      - 'v*.*.*'

jobs:
  deploy:
    name: Build and Release
    runs-on: ubuntu-latest
    # Only run this job when the workflow_run event is triggered by a successful bump-version workflow
    if: ${{ github.event_name == 'push' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install PNPM
        uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Run tests
        run: pnpm test

      - name: Build project
        run: pnpm build

      - name: Get version
        id: get_version
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            # If triggered by a tag push
            echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          else
            # If triggered by workflow_run
            LATEST_TAG=$(git describe --tags --abbrev=0)
            echo "VERSION=${LATEST_TAG#v}" >> $GITHUB_OUTPUT
          fi

      - name: Create distribution archive
        run: |
          VERSION="${{ steps.get_version.outputs.VERSION }}"
          tar -czf TransactionLedger-$VERSION.tar.gz dist package.json README.md

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            TransactionLedger-${{ steps.get_version.outputs.VERSION }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}