{
  "openapi": "3.0.0",
  "info": {
    "title": "Transaction Ledger API",
    "version": "1.0.0",
    "description": "API documentation for the Transaction Ledger project.",
    "contact": {
      "email": "kmario1019@gmail.com"
    }
  },
  "servers": [
    {
      "url": "/api",
      "description": "API base path"
    }
  ],
  "paths": {
    "/transactions": {
      "post": {
        "summary": "Create a transaction",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Transaction created successfully."
          },
          "400": {
            "description": "Bad request - Invalid input data."
          },
          "404": {
            "description": "Account not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "get": {
        "summary": "List transactions",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "accountId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$",
              "description": "MongoDB ObjectId of the account"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["debit", "credit"]
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["date", "amount", "cost"],
              "default": "date"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "default": "desc"
            }
          },
          {
            "name": "minAmount",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "maxAmount",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "minCost",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "maxCost",
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of transactions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid query parameters."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/transactions/{transactionId}": {
      "patch": {
        "summary": "Edit a transaction",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$",
              "description": "MongoDB ObjectId of the transaction"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionEdit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transaction updated successfully."
          },
          "400": {
            "description": "Bad request - Invalid input data."
          },
          "404": {
            "description": "Transaction not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "delete": {
        "summary": "Delete a transaction",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$",
              "description": "MongoDB ObjectId of the transaction"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Transaction deleted successfully."
          },
          "404": {
            "description": "Transaction not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/accounts": {
      "post": {
        "summary": "Create an account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Account created successfully."
          },
          "409": {
            "description": "Conflict - Account with this name already exists."
          },
          "400": {
            "description": "Bad request - Invalid input data."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "get": {
        "summary": "List accounts",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "minBalance",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "maxBalance",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["balance", "createdAt"],
              "default": "createdAt"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "default": "desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of accounts.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid query parameters."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/accounts/{accountId}/debit": {
      "post": {
        "summary": "Debit an account",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$",
              "description": "MongoDB ObjectId of the account"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountDebit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account debited successfully."
          },
          "400": {
            "description": "Bad request - Invalid input data."
          },
          "404": {
            "description": "Account not found."
          },
          "422": {
            "description": "Insufficient funds."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/accounts/{accountId}/credit": {
      "post": {
        "summary": "Credit an account",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$",
              "description": "MongoDB ObjectId of the account"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountCredit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account credited successfully."
          },
          "400": {
            "description": "Bad request - Invalid input data."
          },
          "404": {
            "description": "Account not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/accounts/{accountId}": {
      "put": {
        "summary": "Edit an account",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$",
              "description": "MongoDB ObjectId of the account"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountEdit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account updated successfully."
          },
          "400": {
            "description": "Bad request - Invalid input data."
          },
          "404": {
            "description": "Account not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "delete": {
        "summary": "Delete an account",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$",
              "description": "MongoDB ObjectId of the account"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Account deleted successfully."
          },
          "404": {
            "description": "Account not found."
          },
          "409": {
            "description": "Conflict - Cannot delete account with transactions."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TransactionCreate": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["debit", "credit"]
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "amount": {
            "type": "number",
            "minimum": 0.01
          },
          "cost": {
            "type": "number",
            "minimum": 0.01
          },
          "description": {
            "type": "string",
            "maxLength": 255
          },
          "accountId": {
            "type": "string",
            "pattern": "^[0-9a-fA-F]{24}$",
            "description": "MongoDB ObjectId of the account"
          }
        },
        "required": ["type", "date", "description"]
      },
      "TransactionEdit": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "amount": {
            "type": "number",
            "minimum": 0.01
          },
          "cost": {
            "type": "number",
            "minimum": 0.01
          }
        }
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-fA-F]{24}$",
            "description": "MongoDB ObjectId of the transaction"
          },
          "amount": {
            "type": "number"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "AccountCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "initialBalance": {
            "type": "number",
            "minimum": 0
          }
        },
        "required": ["name", "initialBalance"]
      },
      "AccountDebit": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "cost": {
            "type": "number",
            "minimum": 0.01
          }
        },
        "required": ["date", "cost"]
      },
      "AccountCredit": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "amount": {
            "type": "number",
            "minimum": 0.01
          }
        },
        "required": ["date", "amount"]
      },
      "AccountEdit": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          }
        }
      },
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-fA-F]{24}$",
            "description": "MongoDB ObjectId of the account"
          },
          "name": {
            "type": "string"
          },
          "balance": {
            "type": "number"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ]
}
